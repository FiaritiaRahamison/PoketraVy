@model PoketraVy_frontoffice.Models.UserBudgetsViewModel

@{
    ViewData["Title"] = "User Budgets";
}

<h2>User Budgets</h2>

<div class="row" style="justify-content: center;">
    <div class="col-md-4">
        @if (Model.UtilisateurBudgets != null && Model.UtilisateurBudgets.Any())
        {
            <div class="card mb-3">
                <div class="card-header">
                    Montant de départ
                </div>
                <div class="card-body">
                    @{
                        double? totalMontant = 0.0;
                        foreach (var budget in Model.UtilisateurBudgets)
                        {
                            totalMontant += @budget.Montant;
                        }
                    }
                    <h5><b>@totalMontant</b></h5>
                </div>
            </div>
         }
        else
        {
            <p>No budgets found.</p>
        }
    </div>
    <div class="col-md-4">
        <div class="card mb-3">
            <div class="card-header">
                Dépenses
            </div>
            <div class="card-body">
                <h4><b>@Model.depenses</b></h4>
            </div>
        </div>
        
    </div>
</div>

<div ></div>
<canvas id="pieChart" width="400" height="400"></canvas>
<button id="modifyButton" class="btn btn-primary">Modifier</button>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var ctx = document.getElementById('pieChart').getContext('2d');

        var data = {
            labels: [],
            datasets: [{
                data: [],
                backgroundColor: []
            }]
        };

        @foreach(var budget in Model.UtilisateurBudgets)
        {
            @if (Model.CategorieUtilisateurBudgets.ContainsKey(budget.ID)) {
                @foreach(var catBudget in Model.CategorieUtilisateurBudgets[budget.ID])
                {
                    <text>
                        data.labels.push('@catBudget.Categorie.Value');
                        data.datasets[0].data.push('@catBudget.Montant');
                        data.datasets[0].backgroundColor.push(generateRandomColor());
                    </text>
                }
            }
        }

        var pieChart = new Chart(ctx, {
            type: 'pie',
            data: data,
            options: {
                responsive: false,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw;
                            }
                        }
                    }
                }
            }
        });
    });

    function generateRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    document.getElementById("modifyButton").onclick = function () {
        window.location.href = '@Url.Action("Edit", "Account")';
    };
</script>
